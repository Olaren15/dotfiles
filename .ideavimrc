" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" Inspired by : https://www.cyberwizard.io/posts/the-ultimate-ideavim-setup/

let mapleader = " "
nnoremap <SPACE> <Nop>
set notimeout

" Search
set nohlsearch
set incsearch
set ignorecase
set smartcase

" line numbers / scrolling
set number
set relativenumber
set scrolloff=10

" Others
set showmode
set showcmd

" Don't use Ex mode, use Q for formatting.
map Q gq

" IntelliJ integrations
set idearefactormode=visual
set ideajoin
set ideamarks
set nerdtree
set ideavimsupport=dialog,singleline

" plugins
Plug 'tpope/vim-surround'
Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'vim-scripts/argtextobj.vim'

" Refactors
" [r]e[f]ormat
if &ide =~? 'JetBrains Rider'
    nmap <leader>rf <Action>(SilentCodeCleanup)
else
    nmap <leader>rf <Action>(ReformatCode)
endif
"[r]efactor [r]ename
map <leader>rn <Action>(RenameElement)
"[r]efactor extract [m]ethod
map <leader>rm <Action>(ExtractMethod)
"[r]efactor extract [v]ariable
map <leader>rv <Action>(IntroduceVariable)
"[r]efactor popup
nmap <leader>rr <Action>(Refactorings.QuickListPopupAction)

" move lines
map <C-j> <Action>(MoveLineDown)
map <C-k> <Action>(MoveLineUp)

" navigate errors
"[ (previous) [d]iagnostic
nmap [d <Action>(GotoPreviousError)
"] (next) [d]iagnostic
nmap ]d <Action>(GotoNextError)

" navigate methods
nmap [[ <Action>(MethodUp)
nmap ]] <Action>(MethodDown)

" navigate git hunks
"] (next) [c]hange
nmap ]c <Action>(VcsShowNextChangeMarker)
"[ (previous) [c]hange
nmap [c <Action>(VcsShowPrevChangeMarker)
"= (show?) [c]hange
nmap =c <Action>(VcsShowCurrentChangeMarker)

" camel caase word navigation
nmap <leader>b [b
nmap <leader>w [w
nmap <leader>e ]w
nmap <leader>ge ]b

" Tab navigation
nmap <A-n> :tabnext<CR>
nmap <A-p> :tabprev<CR>\
map <A-q> <Action>(CloseContent)
" Tab Shifter keybinds (requires the Tab Shifter plugin)
map <S-A-h> <Action>(TabShiftActions.ShiftLeft)
map <S-A-j> <Action>(TabShiftActions.ShiftDown)
map <S-A-k> <Action>(TabShiftActions.ShiftUp)
map <S-A-l> <Action>(TabShiftActions.ShiftRight)

" Commentary config
nmap gc <Plug>Commentary
nmap gcc <Plug>CommentaryLine

" Nerdtree
nmap <leader>e :NERDTreeFocus<CR>

" Faster access to system clipboard
nmap <leader>y "+y
nmap <leader>Y "+Y
nmap <leader>p "+p
nmap <leader>P "+P

" Pane navigation
nmap <A-h> <C-w>h
nmap <A-l> <C-w>l
nmap <A-k> <C-w>k
nmap <A-j> <C-w>j

" ide completion
imap <C-j> <Action>(PopupMenu-selectNext)
imap <C-k> <Action>(PopupMenu-selectPrev)
imap <C-y> <Action>(EditorChooseLookupItem)

" Find files
"[s]earch [e]verywhere
map <leader>se <Action>(SearchEverywhere)
"[s]earch [f]iles
map <leader>sf <Action>(GotoFile)

" terminal
nmap <leader>tt <Action>(ActivateTerminalToolWindow)

nmap <S-k> <Action>(ShowHoverInfo)

"[v]im [r]eload
nmap <leader>vr <Action>(IdeaVim.ReloadVimRc.reload)

" project stuff
"[i]de [r]efresh project
nmap <leader>iR <Action>(ExternalSystem.ProjectRefreshAction)
"[c]ode [a]ctions
nmap <leader>ca <Action>(ShowIntentionActions)
"[c]ode [g]enerate
nmap <leader>cg <Action(Generate)
"[c]ode [r]un
nmap <leader>cr <Action>(Run)
"[c]ode [r]un (choose config)
nmap <leader>cR <Action>(ChooseRunConfiguration)
"[c]ode [d]ebug
nmap <leader>cd <Action>(Debug)
"[c]ode [b]build
nmap <leader>cb <Action>(Build)
"[c]ode re[B]uild
nmap <leader>cB <Action>(Rebuild)
"[c]ode [s]top
nmap <leader>cs <Action>(Stop)

" debugging
"[d]ebug [b]reakpoint
nmap <leader>db <Action>(ToggleLineBreakpoint)
"[d]ebug [r]esume
nmap <leader>dr <Action>(Resume)
"[d]ebug [i]nto
nmap <leader>di <Action>(StepInto)
"[d]ebug [o]ut
nmap <leader>do <Action>(StepOut)
"[d]ebug [n]ext
nmap <leader>dn <Action>(StepOver)
